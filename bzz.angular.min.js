(function(){"use strict";var a,b,c=function(a,b){return function(){return a.apply(b,arguments)}};b={googleClientId:null,googleApiKey:null,googleScopes:"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile",bzzApiUrl:"http://localhost:2368/",redirectWhenLogin:"/",loginPage:"/login"},a=function(){function a(a,b,d,e,f){this.options=a,this.http=b,this.rootScope=d,this.location=e,this.GooglePlus=f,this.googleLogin=c(this.googleLogin,this),this.bindEvents()}return a.prototype.bindEvents=function(){return this.rootScope.$on("unauthorizedRequest",function(a){return function(b,c){return a.signOut(c)}}(this)),this.rootScope.$on("$locationChangeStart",function(a){return function(b,c,d,e){return a.checkAuthentication(e)}}(this))},a.prototype.responseInterceptor=function(a){var b;return b=function(b){return 401===b.status&&this.rootScope.$broadcast("unauthorizedRequest"),a.reject(b)},function(a){return a.then(function(a){return a},b)}},a.prototype.setSignIn=function(a,b){var c;return c="/auth/signin/",this.http.post(this.options.bzzApiUrl+c,{provider:a,access_token:b})},a.prototype.setSignOut=function(){var a;return a="/auth/signout/",this.http.post(this.options.bzzApiUrl+a,"")},a.prototype.getAuthMe=function(){var a;return a="/auth/me/",this.http.get(this.options.bzzApiUrl+a)},a.prototype.signOut=function(a){return this.isAuthenticated?a?a():void 0:this.setSignOut().success(function(b){return function(c){return c.loggedOut&&(b.isAuthenticated=!1,b.userData=null,b.location.url(b.options.loginPage),a)?a():void 0}}(this)).error(function(){return function(a){return console.log("Failed to signOut: ",a)}}(this))},a.prototype.checkAuthentication=function(a){return this.getAuthMe().success(function(b){return function(c){return c.authenticated?(b.isAuthenticated=c.authenticated,b.userData=c.userData,a?a():void 0):b.signOut(a)}}(this)).error(function(){return function(a){return console.log("Failed to check Authentication:",a)}}(this))},a.prototype.googleLogin=function(a){return this.GooglePlus.login().then(function(b){return function(c){return b.setSignIn("google",c.access_token).then(function(c){return c.data.authenticated?(b.isAuthenticated=!0,b.location.url(b.options.redirectWhenLogin),a?a():void 0):b.signOut(a)},function(){return b.signOut(a)})}}(this),function(b){return function(){return b.signOut(a)}}(this))},a}(),angular.module("bzz.auth",["googleplus"]).provider("AuthService",["GooglePlusProvider",function(c){this.init=function(a){return this.options=angular.extend(b,a),this.initializeGooglePlus(this.options)},this.initializeGooglePlus=function(a){return c.init({clientId:a.googleClientId,apiKey:a.googleApiKey,scopes:a.googleScopes})},this.$get=["$http","$rootScope","$location","GooglePlus",function(b,c,d,e){return new a(this.options,b,c,d,e)}]}])}).call(this),function(){"use strict";var a;a=function(){function a(a,b,c){this.scope=a,this.provider=b,this.AuthService=c}return a.prototype.login=function(){return"google"===this.provider?this.AuthService.googleLogin():console.log("Invalid provider")},a}(),angular.module("bzz.auth").directive("authButton",["AuthService",function(b){return{template:'<a href="javascript:;" class="{{ model.provider }}-login login-button" ng-click="model.login()">\n<span class="icon"></span><span class="text">Entrar com {{ model.provider }}</span></a>',restrict:"E",transclude:!0,link:function(c,d,e){return c.model=new a(c,e.provider,b)}}}])}.call(this);